安全な@font-faceの書き方(抄訳)

<p>Internet Explorerではかなり昔からあった埋め込みフォント(<code>@font-face</code>によるフォントの参照)の機能は、Safari 3とFirefox 3.5で有効になったことから急速に話題になることが増えた。ようやく時代がMicrosoftに追いついてきた感じですね。その書き方は大筋では一緒なのだが、細かな仕様の違い、というかIEがEmbedded OpenTypeしかサポートしていないことから工夫が必要になる。その工夫をBulletproof、つまり将来にわたって安全であろうという観点で短くまとめた<a href="http://paulirish.com/2009/bulletproof-font-face-implementation-syntax/">Bulletproof @font-face syntax</a>というすごく参考になったエントリがあったので訳しておく。語調などは超訳なので、原文とニュアンスが変わっているかもしれない。</p>

<h2>Bulletproof @font-face syntax</h2>

<p>最も優れた<code>@font-face</code>の定義方法を解説させて貰おう:</p>

<pre><code class="language-css">@font-face {
  font-family: &#39;Graublau Web&#39;;
  src: url(GraublauWeb.eot);
  src: local(&#39;Graublau Web Regular&#39;), local(&#39;Graublau Web&#39;),
         url(GraublauWeb.otf) format(&#39;opentype&#39;);
}
</code></pre>

<p>最後に<em>なぜ</em>この方法が最も優れたものなのかは説明することにして、最初に他の方法の欠点を解説することにしたい。もちろん、問題の中心になるのはIEが.eotフォントが必要なのに対して、他のブラウザでは.ttfか.otfを必要とすることである。それでは順に解説していこう。</p>

<h2><a href="http://jontangerine.com/silo/typography/font-face/">条件付コメントによる方法</a></h2>

<pre><code class="language-html">&lt;style type=&quot;text/css&quot; media=&quot;screen&quot;&gt;
@font-face{
  font-family:&#39;Graublau Web&#39;;
  src: url(&#39;GraublauWeb.otf&#39;) format(&#39;opentype&#39;);
}
&lt;/style&gt;
&lt;!--[if IE]&gt;
&lt;style type=&quot;text/css&quot; media=&quot;screen&quot;&gt;
@font-face{
  font-family:&#39;Graublau Web&#39;;
  src: url(&#39;GraublauWeb.eot&#39;);
}
&lt;/style&gt;
&lt;![endif]--&gt;
</code></pre>

<p>本気なのだろうか？ありとあらゆるHTMLファイルにこのコードを挿入するか、iefont.cssというファイルを作成して参照させなくてはならない。面倒で、美しくない。</p>


<h2><a href="http://readableweb.com/mo-bulletproofer-font-face-css-syntax/">二重に定義する方法</a></h2>

<pre><code class="language-css">@font-face{
  font-family:&#39;Graublau Web&#39;;
  src: url(&#39;GraublauWeb.eot&#39;); /* here you go, IE */
}
@font-face{
  font-family:&#39;Graublau Web&#39;;
  src: url(&#39;GraublauWeb.otf&#39;); /* everyone else take this */
}
</code></pre>

<p><a href="http://webreflection.blogspot.com/2009/09/font-face-we-are-already-doing-wrong.html">Andreaが指摘した</a>この方法の問題点はIEが.otfファイルをダウンロードしてしまうことだ。無駄なHTTP接続が発生させることは許されない。この問題に対するよくある対処はこうなる:</p>

<pre><code class="language-css">@font-face { 
  font-family: &#39;Graublau Web&#39;;
  src: url(&#39;GraublauWeb.otf&#39;) format(&#39;opentype&#39;); /* IE no comprende format()! */
}
</code></pre>

<p>知っていると思うが、IEは<code>format()</code>を解釈できない。ではそこで何が起こるかというと、IEは以下のようなファイルをリクエストする:</p>

<pre>
GraublauWeb.otf&#39;)%20format(&#39;opentype
</pre>

<p>これは……正規表現で<code>?</code>を使うの忘れたようだ。しかし、20から100 KBのファイルをダウンロードさせるよりは404の方がまだマシではある。それでは404をどうにかしてみよう:</p>

<h2><a href="http://readableweb.com/mo-bulletproofer-font-face-css-syntax/">もっと安全な方法</a></h2>

<pre><code class="language-css">@font-face{
  font-family:&#39;Graublau Web&#39;;
  src: url(&#39;GraublauWeb.eot&#39;); /* here you go, IE */
}
@font-face{
  font-family:&#39;Graublau Web&#39;;
  src: url(//:) format (&#39;no404&#39;), url(&#39;GraublauWeb.otf&#39;); /* tricky! */
}
</code></pre>

<p>このエントリに対してRichard Finkが別の書き方を提示してくれたので、ここに追記しておく。その方法は<code>url(//:)</code>を利用して、IEが404になるようなリクエストをさせなくするものだ。<a href="http://readableweb.com/mo-bulletproofer-font-face-css-syntax/">彼のエントリ</a>にはこの書き方を利用する理由を理論付けている。その主張は理解できるが、自分では利用したいとは思えない。</p>

<h2>ローカルへの参照を利用する方法</h2>

<pre><code class="language-css">@font-face {
  font-family: &#39;Graublau Web&#39;;
  src: url(GraublauWeb.eot);
  src: local(&#39;Graublau Web Regular&#39;), url(GraublauWeb.otf) format(&#39;opentype&#39;);
}
</code></pre>

<p>かなり簡潔で明瞭だ。IE以外のブラウザは.eotファイルを飛ばし次の定義を参照する。一方、IEは二番目の定義を解釈しようとするが、<code>local()</code>によるファイルの場所の指定を理解できない上に、複数のファイルの場所の指定も理解できない。ということで.eotファイルを参照することになる。IEは必ず最後の<code>src: url()</code>を参照することになるので、<a href="http://randsco.com/test/fontFace/peter.html">この方法はうまく動作しないだろう</a>。</p>

<pre>
src: url(GraublauWeb.eot);  
src: url(GraublauWeb.otf); /* Yeah IE will only try this one. :( */
</pre>

<p>また他の利点として、もしユーザー(訳注: サイトの訪問者)がカスタム・フォントをインストールしていた場合、ダウンロードさせないで済むことになる点が挙げられる。注意点としては、<a href="http://hacks.mozilla.org/2009/06/beautiful-fonts-with-font-face/">OS X上のSafariは完全なフォント名ではなくPostscriptフォント名のみを受け付ける</a>ので、両者が違う場合は両方含めて記述しなければならない:</p>

<h2>安全な<code>@font-face</code>な書き方</h2>

<pre><code class="language-css">@font-face {
  font-family: &#39;Graublau Web&#39;;
  src: url(GraublauWeb.eot);
  src: local(&#39;Graublau Web Regular&#39;), local(&#39;Graublau Web&#39;),
         url(GraublauWeb.otf) format(&#39;opentype&#39;);
}
</code></pre>

<h2>補足その他:</h2>

<ul>
<li><code>font-variant</code>プロパティを定義に含めてしまうと、IE 6-8やSafari(4.0.3で確認)では動作しない(Thanks <a href="http://sidisinsane.com/">Sid</a>)。</li>
<li><code>font-style</code>プロパティを定義に含めても安全で全てのブラウザで正常に動作するが、IEはその値を無視する。</li>
<li>Operaは<code>local()</code>の値を引用符で括らないと参照に失敗する。なので、こう書く: <code>local(&#39;Use Quotes&#39;)</code>。仕様の違反としてOperaにバグ報告をした。<a href="http://randsco.com/">Scott Kinler</a>と<a href="http://readableweb.com/mo-bulletproofer-font-face-css-syntax/">Richard Fink</a>のOperaの適切でない振る舞いに対する根気強い調査に感謝する。</li>
<li>Safariのパーミッションエラー？<code>local(&#39;Fontin&#39;)</code>というように使った場合、もしユーザーがローカルにFontinをインストールしていた場合、セキュリティの警告ダイアログでそのファイルの使用の許可を求められる、というような報告があった。まだこの挙動について返答することはできない。しかし、私がテストしたところでは、すべてのブラウザがローカルのフォントを利用するわけではないようだ: Opera 10 (Win XP)とSafari 4 (Win XP)は参照しないが、Fx 3.5 (Win &amp; OS X)とSafari 4 (OS X)はちゃんと利用してくれる。</li>
<li>Chrome？Chromeのベータ版またはdevビルドで<code>@font-face</code>がサポートされたという噂はある。この機能はインストール時に有効になっていないが、Chrome 3のコマンドライン・オプションで指定することによって有効にできる。私は<a href="http://webfonts.info/wiki/index.php?title=@font-face_browser_support#Google_Chrome">このブラウザのサポート状況</a>を詳細と共に最新の状態に更新している。</li>
<li>FxやOpera、Safariに対してTruTypeフォントを提供することもできるが、その場合も<code>format(&#39;opentype&#39;)</code>と指定すると良いだろう。提供するフォントがOpenTypeとTrueTypeのどちらであろうとも、フォーマットのヒントは必須ではない。</li>
<li>クロスブラウザのテスト用にテストページを作成した: <a href="http://dl.getdropbox.com/u/39519/webfontsdemo/index.html">http://dl.getdropbox.com/u/39519/webfontsdemo/index.html</a></li>
</ul>

<hr>

<p>以下は訳注と私見。</p>

<h2>条件付コメント</h2>

<p>面倒くさいというのはわからなくもないけど、実際はCMSなりなんなりのテンプレートをさくさく書き換えるだけな場合が多いと思うので、そんなでもないような気もするし、将来に渡って安全という観点では条件付きコメントは最も優れているような気がする。その一方で条件付コメントがとにかく受け付けないという何かを持っている人が多いことも理解できないことはない、というかどっちかというとそっち側の人間なのでこの方法を採用したくない気持ちもわかる。</p>

<h2><code>url(//:)...</code></h2>

<p>これで404になるリクエストが発生しない理由は、上の例だと、</p>

<pre>
//:) format%20(&#39;no404&#39;),%20url(&#39;GraublauWeb.otf
</pre>

<p>というURLをリクエストするので、そのウェブページのドメインに対するリクエストではなくなるから。IEからは404に見えるのは変わらない。</p>

<h2><code>format(&#39;opentype&#39;)</code>をTrueTypeでも指定する</h2>

<p>これの意味がわからない。現状ではどちらでも変わらないのだけど将来は変わるかもしれないと思う。というかOSに依存するのだろうけど変わるんじゃないかと思う。とは言うもののTrueTypeを提供して<code> format(&#39;truetype&#39;)</code>を指定する際に何かしらの問題点はあるかもしれないので、それはオススメできなとは思う。のでOpenTypeを提供するのが現状では無難でかつBulletproofな気がする。</p>

<hr>

<p>埋め込みフォントを日本語フォントで……となると、個人のサイトではサイズや帯域の面でも労力やコストの面でもなかなか難しいけど、金に糸目をつけない規模の大きなサイトでなら浸透する可能性はあるのかな。</p>

<p>Bulletproof的なアプローチの話は話題になること自体少なかった(あってもごく一時的だった)けど、優秀なモダンブラウザが増えてきて新しい表現を方法をウェブが手に入れる一方で、<a href="http://twitter.com/typester/status/4078235754">いまだにIE6を使っている昭和な人</a>が無視できない数存在することから、今ではウェブデザインにおいて最も力を入れて考慮すべきことになった気がする。クロスブラウザではなくエラスティック・ウェブデザインみたいな意味で。</p>

<p>とかいうとりあえず言ってみました的な言葉で締める。Bulletproofを「将来に渡って安全な」とか訳すと堅苦しいのでなんか良い訳が欲しいな。</p>
